# This file contains common pin mappings for the BigTreeTech OctoPus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

[save_variables]
filename: ~/variables.cfg

[force_move]
enable_force_move: True

[include IDEX_mode.cfg]

[include GCodes.cfg]

[gcode_macro list_sensors]
gcode:
  { action_respond_info(printer.heaters.available_heaters | join(', ')) }
  { action_respond_info(printer.heaters.available_sensors | join(', ')) }

[stepper_x]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15

# step_pin: PF13
# dir_pin: PF12
# enable_pin: !PF14
microsteps: 16
rotation_distance: 40 #39.2 #40 #39.2
endstop_pin: PG6
position_endstop: -10
position_max: 260
position_min: -10
homing_speed: 5 #50

[stepper_y]
step_pin: PF9 #PF11
dir_pin: !PF10 #PG3
enable_pin: !PG2 #PG5
microsteps: 16
rotation_distance: 40 #39.36 #40 #39.36
endstop_pin: PG10
position_endstop: 430
position_max: 430
position_min: -5
homing_speed: 50

[stepper_y1]
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
microsteps: 16
rotation_distance: 40 #39.36 #40


[stepper_z]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
microsteps: 16
rotation_distance: 5.999999999 #6.1799999897 #5.999999999 #6.1799999897 #6.412191927610429
endstop_pin: PG11
position_endstop: 400
position_max: 401
position_min: -3
homing_speed: 50 #12
second_homing_speed: 10

[adc_temperature my_sensor]
temperature1: 30
voltage1: 1.2953193 #0.389408
temperature2: 40
voltage2: 1.3168782 #0.410958
temperature3: 50
voltage3: 1.3739913 #0.414988
temperature4: 60
voltage4: 1.4323155
temperature5: 70
voltage5: 1.4826834
temperature6: 80
voltage6: 1.5395985
temperature7: 90
voltage7: 1.5660909
temperature8: 100
voltage8: 1.637308
temperature9: 110
voltage9: 1.6640019
temperature10: 120
voltage10: 1.7270616
temperature11: 130
voltage11: 1.7755122
temperature12: 140
voltage12: 1.7930418
temperature13: 150
voltage13: 1.8664734
temperature14: 160
voltage14: 1.9087827
temperature15: 170
voltage15: 1.9568307
temperature16: 180
voltage16: 1.9898703
temperature17: 190
voltage17: 2.0347998
temperature18: 200
voltage18: 2.10672 #0.629121
temperature19: 210
voltage19: 2.1250548 #0.640324
temperature20: 220
voltage20: 2.1714924 #0.655830
temperature21: 230
voltage21: 2.2188375
temperature22: 240
voltage22: 2.244825
temperature23: 250
voltage23: 2.2837089
temperature24: 260
voltage24: 2.3366937
temperature25: 270
voltage25: 2.3976381
temperature26: 280
voltage26: 2.4265461
temperature27:290
voltage27: 2.4582789
temperature28:300
voltage28: 2.5202298

#temperature1: 0
#voltage1: 0
#temperature2: 1
#voltage2: 1.1
#temperature3: 10
#voltage3: 1.15
#temperature4: 20
#voltage4: 1.2

#...
#   A set of temperatures (in Celsius) and voltages (in Volts) to use
#   as reference when converting a temperature. A heater section using
#   this sensor may also specify adc_voltage and voltage_offset
#   parameters to define the ADC voltage (see "Common temperature
#   amplifiers" section for details). At least two measurements must
#   be provided.
#temperature1:
#resistance1:
#temperature2:
#resistance2:
#...
#   Alternatively one may specify a set of temperatures (in Celsius)
#   and resistance (in Ohms) to use as reference when converting a
#   temperature. A heater section using this sensor may also specify a
#   pullup_resistor parameter (see "extruder" section for details). At
#   least two measurements must be provided.


[extruder]
step_pin: PF11 #PF9
dir_pin: PG3 #PF10
enable_pin: !PG5    #PG2
heater_pin: PA2 # HE0
sensor_pin:  PA6
microsteps: 16
rotation_distance: 22.857142857142858 #33.500
nozzle_diameter: 0.600
filament_diameter: 1.750
sensor_type: my_sensor #PT100 INA826 #ATC Semitec 104GT-2 #EPCOS 100K B57560G104F
control: pid
adc_voltage: 3.3
voltage_offset: 0.018 # -0.79 # 0


pid_kp = 242.759 #111.515
pid_ki = 93.369 #39.827
pid_kd = 157.793 #78.061
min_extrude_temp: 0
min_temp: 0
max_temp: 400
max_extrude_only_distance: 1000
pressure_advance: 0.0175075
smooth_time: 2.5 #2.8



[verify_heater extruder]
max_error: 120
check_gain_time: 20
hysteresis: 40 #15 #5
heating_gain: 6 #2

#[gcode_macro M109]
#rename_existing: M109.1
#default_parameter_S: off
#default_parameter_R: off
#variable_tolerance: 1.0
#gcode:
#    {% if S != 'off' %}
#        M104 S{S}
#        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={S|float - tolerance}
#    {% elif R != 'off' %}
#        M109.1 S{R}
#    {% else %}
#        M104 S0
#    {% endif %}

    
[verify_heater extruder1]
max_error: 120
check_gain_time: 20
hysteresis: 40 #15 #5
heating_gain: 6 #2

#[extruder_stepper extrude]
#extruder: extruder
#   The extruder this stepper is synchronized to. If this is set to an
#   empty string then the stepper will not be synchronized to an
#   extruder. This parameter must be provided.
#step_pin: PC13
#dir_pin: !PF0
#enable_pin: !PF1
#microsteps: 16
#rotation_distance: 45.714285714285714
#   See the "stepper" section for the definition of the above
#   parameters.

# Definition for the secondary carriage and extruder1
[dual_carriage]
axis: x
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14

# step_pin: PG0
# dir_pin: PG1
# enable_pin: !PF15
microsteps: 16
rotation_distance: 40 #39.4 #40 #39.4 #80.466 #80.87 #79.67 #62 #40 #32
endstop_pin: PG9
position_endstop: 390 #yet to be measured
position_min: 130 #yet to be measured
position_max: 390 #yet to be measured 
homing_speed: 50
#gcode:
#  SET_DUAL_CARRIAGE CARRIAGE=1
#  SET_GCODE_OFFSET Z=-0.12 X=-5
#deactivate_gcode:
#  G0 X340 F18000


#to get voltage values, multiply adc_voltage by output of "QUERY_ADC name=extruder". e.g. 3.3 X 0.414988 which is a output at 60DegC
[adc_temperature my_sensor1]
temperature1: 30
voltage1: 1.2748725 #0.389408
temperature2: 40
voltage2: 1.3269498 #0.410958
temperature3: 50
voltage3: 1.3901085 #0.414988
temperature4: 60
voltage4: 1.4489376
temperature5: 70
voltage5: 1.4949726
temperature6: 80
voltage6: 1.5513828
temperature7: 90
voltage7: 1.6061826
temperature8: 100
voltage8: 1.6583622
temperature9: 110
voltage9: 1.7065125
temperature10: 120
voltage10: 1.7475084
temperature11: 130
voltage11: 1.7940483
temperature12: 140
voltage12: 1.8619425
temperature13: 150
voltage13: 1.909083
temperature14: 160
voltage14: 1.955118
temperature15: 170
voltage15: 2.0022618
temperature16: 180
voltage16: 2.0447724
temperature17: 190
voltage17: 2.0822439
temperature18: 200
voltage18: 2.1408684 #0.629121
temperature19: 210
voltage19: 2.183580 #0.640324
temperature20: 220
voltage20: 2.217629 #0.655830
temperature21: 230
voltage21: 2.2663839
temperature22: 240
voltage22: 2.2813923
temperature23: 250
voltage23: 2.3386077
temperature24: 260
voltage24: 2.381016
temperature25: 270
voltage25: 2.4072081
temperature26: 280
voltage26: 2.4483063
temperature27:290
voltage27: 2.5041126
temperature28:300
voltage28: 2.5276845

[extruder1]
step_pin: PE2
dir_pin: PE3
enable_pin: !PD4
microsteps: 16
rotation_distance: 22.857142857142858
nozzle_diameter: 0.600
filament_diameter: 1.750
heater_pin: PA3 #PA3 # HE0
sensor_pin:  PA7 # T0
sensor_type: my_sensor1 #PT100 INA826 #ATC Semitec 104GT-2 #EPCOS 100K B57560G104F
control: pid
adc_voltage: 3.3

pid_kp = 242.759 #111.515
pid_ki = 93.369 #39.827
pid_kd = 157.793 #78.061
#voltage_offset: -0.05 #2 #-1.42 #-0.79 # 0
#pid_Kp: 110.546 #-37.571  #22.2
#pid_Ki: 53.925 #-22.100 #1.08
#pid_Kd: 56.655 #-15.968 #114
min_extrude_temp: 0
min_temp: 0
max_temp: 400
max_extrude_only_distance: 1000
pressure_advance: 0.0175075
smooth_time: 2.5 #2.8



[extruder_stepper extrude1]
extruder: extruder1
#   The extruder this stepper is synchronized to. If this is set to an
#   empty string then the stepper will not be synchronized to an
#   extruder. This parameter must be provided.
step_pin: PE6
dir_pin: PA14
enable_pin: !PE0
microsteps: 16
rotation_distance: 22.857142857142858 #45.714285714285714 #22.857142857142858
#   See the "stepper" section for the definition of the above
#   parameters.

#[gcode_macro PARK_extruder1]
#gcode:
#    SAVE_GCODE_STATE NAME=park1
#    G90
#    G1 X405 #yet to be measured
#    RESTORE_GCODE_STATE NAME=park1

#[gcode_macro T1]
#gcode:
#    PARK_{printer.toolhead.extruder}
#    ACTIVATE_EXTRUDER EXTRUDER=extruder1
#    SYNC_EXTRUDER_MOTION EXTRUDER=extrude1 MOTION_QUEUE=extruder1
#    SET_DUAL_CARRIAGE CARRIAGE=1
#    SET_GCODE_OFFSET Y=1
    

[heater_generic chamber_heater]
gcode_id:C
#   The id to use when reporting the temperature in the M105 command.
#   This parameter must be provided.
heater_pin: PB11
#max_power: .3
sensor_type: EPCOS 100K B57560G104F #NTC 100K beta 3950
sensor_pin: PF4 
#smooth_time:
control: watermark
#pid_Kp:
#pid_Ki:
#pid_Kd:
#pwm_cycle_time:
min_temp: 0
max_temp: 100
#   See the "extruder" section for the definition of the above
#   parameters.

[verify_heater chamber_heater]
max_error: 120
check_gain_time: 1000
hysteresis: 5
heating_gain: 0.1
  
[heater_bed]
heater_pin: PB10
sensor_pin: PF3
sensor_type: EPCOS 100K B57560G104F
control: watermark
min_temp: -100
max_temp: 400
smooth_time: 2.5 

[fan]
pin: PA8 # FAN0
max_power: 1.0
cycle_time: 0.010
kick_start_time: 0.100
off_below: 0.0

[heater_fan chamber_heater_fan]
pin: PE5
max_power: 1.0
heater: chamber_heater
heater_temp: 40.0 # fan will turn off below this level

#[heater_fan fan1]
#pin: PE5 # FAN1

#[heater_fan fan2]
#pin: PD12 # FAN2

#[heater_fan fan3]
#pin: PD13 # FAN3

#[heater_fan fan4]
#pin: PD14 # FAN4

#[heater_fan fan5]
#pin: PD15 # FAN5

[controller_fan my_nozzle_fan0]
pin: PD12
max_power: 1.0
#shutdown_speed:
#cycle_time: 0.010
#hardware_pwm:
kick_start_time: 0.1
#off_below: 0.0
#tachometer_pin:
#tachometer_ppr:
#tachometer_poll_interval:
#enable_pin: PD12
#   See the "fan" section for a description of the above parameters.
fan_speed: 1.0
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when a heater or stepper driver is active.
#   The default is 1.0
#idle_timeout: 0
#   The amount of time (in seconds) after a stepper driver or heater
#   was active and the fan should be kept running. The default
#   is 30 seconds.
#idle_speed: 1.0
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when a heater or stepper driver was active and
#   before the idle_timeout is reached. The default is fan_speed.
#heater: extruder1
#heater_temp: 0.0
#stepper:
#   Name of the config section defining the heater/stepper that this fan
#   is associated with. If a comma separated list of heater/stepper names
#   is provided here, then the fan will be enabled when any of the given
#   heaters/steppers are enabled. The default heater is "extruder", the
#   default stepper is all of them.

#[heater_fan controller_fan1]
#pin: PD12
#max_power:
#shutdown_speed:
#cycle_time: 0.010
#hardware_pwm:
#kick_start_time: 0.1
#off_below: 0.0
#tachometer_pin:
#tachometer_ppr:
#tachometer_poll_interval:
#enable_pin: PD12
#   See the "fan" section for a description of the above parameters.
#fan_speed: 1.0
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when a heater or stepper driver is active.
#   The default is 1.0
#idle_timeout: 0
#   The amount of time (in seconds) after a stepper driver or heater
#   was active and the fan should be kept running. The default
#   is 30 seconds.
#idle_speed: 1.0
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when a heater or stepper driver was active and
#   before the idle_timeout is reached. The default is fan_speed.
#heater: heater_bed
#heater_temp: 0.0
#stepper:
#   Name of the config section defining the heater/stepper that this fan
#   is associated with. If a comma separated list of heater/stepper names
#   is provided here, then the fan will be enabled when any of the given
#   heaters/steppers are enabled. The default heater is "extruder", the
#   default stepper is all of them.

########################################
# DUAL-CARRIAGES
########################################

[gcode_macro DC_VARS]
# Offset coordinates for dual_carriage
variable_offset_x: 5.1
variable_offset_y: 0
variable_offset_z: 0
# Autopark parameters
## default autopark: 0:inactive - 1:active
variable_autopark: 1
variable_z_hop: 0
variable_movespeed: 500
variable_feedrate: 3000
# HeatBed size
variable_bed_x_min: 0
variable_bed_x_max: 400
# Print cooling fans names
#variable_fan0: 'controller_fan0'
#variable_fan1: 'controller_fan1'
# Extruders temp
variable_offset_temp: 0
gcode:

# [gcode_macro M605]
# description: Set the dual-carriages mode
# gcode:
#     {% set mode = params.S|default(1)|int %}
#     {% set offset_temp = params.R|default(0)|float %}
#     {% if printer.dual_carriage is defined %}
#         {% if (mode) == 0 %}
#             SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=autopark VALUE=0
#             MODE_FULL_CONTROL
#         {% elif (mode) == 1 %}
#             SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=autopark VALUE=1
#             MODE_FULL_CONTROL
#         {% elif (mode) == 2 and (params.X) is defined %}
#             MODE_DUPLICATION X={params.X} R={offset_temp}
#         {% elif (mode) == 2 %}
#             MODE_DUPLICATION R={offset_temp}
#         {% elif (mode) == 3 %}
#             MODE_MIRRORED R={offset_temp}
#         {% endif %}
#         G1 F3000
#     {% endif %}

# [gcode_macro MODE_FULL_CONTROL]
# description: Set the dual-carriages mode to "FULL_CONTROL"
# gcode:
#     {% set dcvars = printer["gcode_macro DC_VARS"] %}
#     {% if printer.dual_carriage is defined %}
#         SET_DUAL_CARRIAGE_MODE MODE=FULL_CONTROL
#         G28 X
#         SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder1 #SYNC_EXTRUDER_STEPPERS EXTRUDER=extruder1
#         SYNC_EXTRUDER_MOTION EXTRUDER=extrude1 MOTION_QUEUE=extruder1
#         ACTIVATE_EXTRUDER EXTRUDER=extruder
#         SET_GCODE_OFFSET X=0 Y=0 Z=0
#         # set print fan speed
#         _SET_PRINT_FANS_SPEED
#     {% endif %}

# [gcode_macro MODE_DUPLICATION]
# description: Set the dual-carriages mode to "DUPLICATION"
# gcode:
#     {% set dcvars = printer["gcode_macro DC_VARS"] %}
#     {% set bed_x_mid = 0.5 * (dcvars.bed_x_max|float - dcvars.bed_x_min|float) %}
#     {% set offset_temp = params.R|default(0)|float %}
#     {% if printer.dual_carriage is defined %}
#         # unsync both carriages
#         SET_DUAL_CARRIAGE_MODE MODE=FULL_CONTROL
#         G28 X
#         SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder1 #SYNC_EXTRUDER_STEPPERS EXTRUDER=extruder1
#         ACTIVATE_EXTRUDER EXTRUDER=extruder
#         # place both carriages
#         SET_DUAL_CARRIAGE CARRIAGE=1
#         G1 X{params.X|default(bed_x_mid)|float} F{dcvars.feedrate}
#         SET_DUAL_CARRIAGE CARRIAGE=0
#         G1 X{dcvars.bed_x_min|float} F{dcvars.feedrate}
#         # heaters management
#         SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=offset_temp VALUE={offset_temp}
#         _SYNC_EXTRUDERS_TEMP
#         # steppers management
#         SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder #SYNC_EXTRUDER_STEPPERS EXTRUDER=extruder1 TO=extruder
#         SYNC_EXTRUDER_MOTION EXTRUDER=extrude1 MOTION_QUEUE=extruder
#         SET_DUAL_CARRIAGE_MODE MODE=DUPLICATION
#         # print fans management
#         _SET_PRINT_FANS_SPEED
#     {% endif %}

# [gcode_macro MODE_MIRRORED]
# description: Set the dual-carriages mode to "MIRRORED"
# gcode:
#     {% set dcvars = printer["gcode_macro DC_VARS"] %}
#     {% set offset_temp = params.R|default(0)|float %}
#     {% if printer.dual_carriage is defined %}
#         # unsync both carriages
#         SET_DUAL_CARRIAGE_MODE MODE=FULL_CONTROL
#         G28 X
#         SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder1 #SYNC_EXTRUDER_STEPPERS EXTRUDER=extruder1
#         ACTIVATE_EXTRUDER EXTRUDER=extruder
#         # place both carriages
#         SET_DUAL_CARRIAGE CARRIAGE=1
#         G1 X{dcvars.bed_x_max|float} F{dcvars.feedrate}
#         SET_DUAL_CARRIAGE CARRIAGE=0
#         G1 X{dcvars.bed_x_min|float} F{dcvars.feedrate}
#         # heaters management
#         SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=offset_temp VALUE={offset_temp}
#         _SYNC_EXTRUDERS_TEMP
#         # steppers management
#         SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder #SYNC_EXTRUDER_STEPPERS EXTRUDER=extruder1 TO=extruder
#         SYNC_EXTRUDER_MOTION EXTRUDER=extrude1 MOTION_QUEUE=extruder
#         SET_DUAL_CARRIAGE_MODE MODE=MIRRORED
#         # print fans management
#         _SET_PRINT_FANS_SPEED
#     {% endif %}
    

    
[pause_resume]
#PAUSE:
recover_velocity: 60


#[gcode_macro PAUSE]
#rename_existing: PAUSE1
#gcode:
# {% if printer.toolhead.extruder == 'extruder' %}
# G90
# G1 X0 Y420 Z5 E-5 F4000
# {% else %}
#  {% if printer.toolhead.extruder == 'extruder1' %}
#  G90
#  G1 X410 Y420 Z5 E-5 F4000
#  {% endif %}
# {% endif %}



[temperature_sensor mcu_temp]
sensor_type: temperature_mcu

[mcu]

serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_4B0035000A51303432383339-if00
#restart_method: command
# setup for PA9, PA10 USART1_tx / rx directly connected to the RPI GPIO TX / RX pins
# These are the pins the OctoPus uses for its built in RPI 40 pin connector
# only connect GND, TX, RX - supply 5v power to the RPI separately
# do not cross over TX/RX - it is done internally on the OctoPus PCB.
# Use "sudo raspi-config" to disable the serial terminal - but enable the serial port.
# When running "make menuconfig" you must un-select the USB Serial check box

[printer]
kinematics: cartesian
max_velocity: 10 #800 #600
max_accel: 100 # 1000
max_accel_to_decel: 200
max_z_velocity: 10 #25
max_z_accel: 100 #500
square_corner_velocity: 10 # 3 # 5.0

########################################
# TMC2209 configuration
########################################

[tmc2209 stepper_x]
uart_pin: PD11
#uart_pin: PC4
#diag_pin: PG6
run_current: 1.200 #1.200 #0.800
#stealthchop_threshold: 999999

[tmc2209 dual_carriage]
uart_pin: PC4
#uart_pin: PD11
#diag_pin: PG6
run_current: 1.200 #1.200 #0.800
#stealthchop_threshold: 999999

[tmc2209 stepper_y]
uart_pin: PF2
#diag_pin: PG9
run_current: 1.200 #1.200 #0.800
#stealthchop_threshold: 999999

[tmc2209 stepper_y1]
uart_pin: PE4
#diag_pin: PG9
run_current: 1.200 #1.200 #0.800
#stealthchop_threshold: 999999

[tmc2209 stepper_z]
uart_pin: PC7
##diag_pin: PG10
run_current: 1.000 #0.800
#stealthchop_threshold: 999999
#uart_address: 3

#[tmc2209 stepper_]
#uart_pin: PC7
##diag_pin: PG11
#run_current: 0.650
#stealthchop_threshold: 999999

[tmc2209 extruder]
uart_pin: PC6
run_current: 1.200 #0.800
#stealthchop_threshold: 999999

[tmc2209 extruder1]
uart_pin: PE1
run_current: 1.000 #0.800
#stealthchop_threshold: 999999

[tmc2209 extruder_stepper extrude1]
uart_pin: PD3
run_current: 1.000 #0.800
#stealthchop_threshold: 999999

#[tmc2209 my_extra_stepper1]
#uart_pin: PD3
#run_current: 1.000 #0.800
#stealthchop_threshold: 999999

#[tmc2209 extruder2]
#uart_pin: PE1
#run_current: 0.800
#stealthchop_threshold: 999999

#[tmc2209 extruder3]
#uart_pin: PD3
#run_current: 0.800
#stealthchop_threshold: 999999

    
[probe]
pin:PB1
x_offset: 0
y_offset: 0
#z_offset: -0.75
sample_retract_dist: 2.0
speed: 5
lift_speed: 1
samples_tolerance: 2.00
samples:2
samples_result: average
samples_tolerance_retries : 2
 

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

# See the sample-lcd.cfg file for definitions of common LCD displays.

[bed_mesh]
horizontal_move_z: 8
mesh_min: 0,20
mesh_max: 260,410
probe_count: 4,4
algorithm: bicubic
#fade_start: 1
#fade_end: 3
#fade_target: 0
######################################################################
# "RepRapDiscount 128x64 Full Graphic Smart Controller" type displays
######################################################################

#[display]
#lcd_type: st7920
#cs_pin: EXP1_4
#sclk_pin: EXP1_5
#sid_pin: EXP1_3
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2
#kill_pin: ^!EXP2_8

#[output_pin beeper]
#pin: EXP1_1


######################################################################
# "RepRapDiscount 2004 Smart Controller" type displays
######################################################################

#[display]
#lcd_type: hd44780
#rs_pin: EXP1_4
#e_pin: EXP1_3
#d4_pin: EXP1_5
#d5_pin: EXP1_6
#d6_pin: EXP1_7
#d7_pin: EXP1_8
#encoder_pins: ^EXP2_3, ^EXP2_5
#click_pin: ^!EXP1_2
#kill_pin: ^!EXP2_8

#[output_pin beeper]
#pin: EXP1_1

######################################################################
#  Mini 12864Panel (with neopixel backlight leds)
######################################################################

#[display]
#lcd_type: uc1701
#cs_pin: EXP1_3
#a0_pin: EXP1_4
#rst_pin: EXP1_5
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2
## Some micro-controller boards may require an spi bus to be specified:
#spi_bus: spi
## Alternatively, some micro-controller boards may work with software spi:
#contrast: 63
#spi_software_mosi_pin: PA7
#spi_software_miso_pin: PA6
#spi_software_sclk_pin: PA5

#[output_pin beeper]
#pin: EXP1_1

#[neopixel btt_mini12864]
#pin: EXP1_6
#chain_count: 3
#color_order: RGB
#initial_RED: 0.4
#initial_GREEN: 0.4
#initial_BLUE: 0.4

######################################################################
#  BigTreeTtech TFT TouchSCreen emulated 12864 mode
######################################################################

#[display]
#lcd_type: emulated_st7920
#spi_software_miso_pin: PA6
#spi_software_mosi_pin: EXP1_3
#spi_software_sclk_pin: EXP1_5
#en_pin: EXP1_4
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2

#[output_pin beeper]
#pin: EXP1_1

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*#
#*# [gcode_macro M218]
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.619375, -0.591250, -0.508750, -0.422500
#*# 	-1.810000, -1.476250, -0.805000, -0.284687
#*# 	-1.798750, -1.619687, -1.586875, -1.673125
#*# 	-2.037812, -1.930937, -1.918750, -1.960000
#*# tension = 0.2
#*# min_x = 0.0
#*# algo = bicubic
#*# y_count = 4
#*# mesh_y_pps = 2
#*# min_y = 20.0
#*# x_count = 4
#*# max_y = 410.0
#*# mesh_x_pps = 2
#*# max_x = 259.97
#*#
#*# [probe]
#*# z_offset = -0.620
